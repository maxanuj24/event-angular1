{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/add-event/add-event.component.css","webpack:///./src/app/add-event/add-event.component.html","webpack:///./src/app/add-event/add-event.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/list-events/list-events.component.css","webpack:///./src/app/list-events/list-events.component.html","webpack:///./src/app/list-events/list-events.component.ts","webpack:///./src/app/services/event.service.ts","webpack:///./src/app/update-event/update-event.component.css","webpack:///./src/app/update-event/update-event.component.html","webpack:///./src/app/update-event/update-event.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div>\\n  <br />\\n  <h3>Manage Event</h3>\\n  <form [formGroup]=\\\"eventsForm\\\">\\n    <!-- TODO: Build add form here -->\\n    <div class=\\\"form-group\\\">\\n        <b><label for=\\\"name\\\">Event Name</label></b>\\n        <b><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" required></b>\\n      </div>\\n \\n      <div class=\\\"form-group\\\">\\n       <b> <label for=\\\"type\\\">Type</label></b>\\n            <select type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"type\\\">\\n              <option>Cristmas</option>\\n              <option>Concert</option>\\n              <option>Party</option>\\n              <option>Celebration</option>\\n            </select>\\n       <!--<b> <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"type\\\"></b>-->\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <b><label for=\\\"length\\\">Length (Mins)</label></b>\\n        <b><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"length\\\"></b>\\n      </div>\\n \\n      <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" style=\\\"color: #fff;\\\">Save</button>\\n  </form>\\n</div>\\n  \"","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { EventService } from './../services/event.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-add-event',\n  templateUrl: './add-event.component.html',\n  styleUrls: ['./add-event.component.css']\n})\nexport class AddEventComponent implements OnInit {\n\n  // newEvent: Events = new Events();\n  newEvent: any;\n\n  constructor(private eventService: EventService, private router: Router) { }\n\n  ngOnInit() {}\n\n  eventsForm = new FormGroup({\n    name: new FormControl(),\n    type: new FormControl(),\n    length: new FormControl()\n  });\n\n  addEvent() {\n    this.eventsForm.value.views = 0;\n    this.newEvent = this.eventsForm.value;\n    this.eventService.addEvent(this.newEvent).subscribe((response) => {\n      this.router.navigate(['/list-events']);\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ng-events';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { routingModule } from './app.routing';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { AddEventComponent } from './add-event/add-event.component';\nimport { ListEventsComponent } from './list-events/list-events.component';\nimport { UpdateEventComponent } from './update-event/update-event.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AddEventComponent,\n    ListEventsComponent,\n    UpdateEventComponent\n  ],\n  imports: [\n    BrowserModule,\n    routingModule, \n    FormsModule, \n    HttpClientModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { RouterModule, Routes } from '@angular/router';\nimport { ModuleWithProviders } from '@angular/core';\nimport { AddEventComponent } from './add-event/add-event.component';\nimport { ListEventsComponent } from './list-events/list-events.component';\nimport { UpdateEventComponent } from './update-event/update-event.component';\n\nconst routes: Routes = [\n  { path: '',  redirectTo: '/list-events', pathMatch: 'full' },\n  { path: 'list-events', component: ListEventsComponent },\n  { path: 'add-events', component: AddEventComponent },\n  { path: 'update-event/:id', component: UpdateEventComponent }\n];\n\nexport const routingModule: ModuleWithProviders = RouterModule.forRoot(routes);","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div>\\n    <br />\\n    <h3>Events</h3>\\n    <table class=\\\"table\\\">\\n      <thead>\\n        <tr>\\n          <th>Id</th>\\n          <th>Event Name</th>\\n          <th>Type</th>\\n          <th>Length (Mins)</th>\\n          <th>Views</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let event of events\\\">\\n          <td>{{event._id.substr(0, 8)}}</td>\\n          <td>\\n            <a routerLink=\\\"/update-event/{{event._id}}\\\">{{event.name}}</a>\\n          </td>\\n          <!-- TODO: Build table data here -->\\n          <td>{{event.type}}</td>\\n          <td>{{event.length}}</td>\\n          <td>{{event.views}}</td>\\n        </tr>\\n        \\n      </tbody>\\n    </table>\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"addEvent()\\\">\\n      <a routerLink=\\\"/add-events\\\" style=\\\"color: #fff;\\\">Add Event</a>\\n    </button>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { EventService } from './../services/event.service';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-list-events',\n  templateUrl: './list-events.component.html',\n  styleUrls: ['./list-events.component.css']\n})\nexport class ListEventsComponent implements OnInit {\n\n  events: any;\n\n  constructor(private eventService: EventService, private router: Router) { }\n\n  ngOnInit() {\n    this.eventService.getEvents().subscribe((response) => {\n      console.log(response.data);\n      this.events = Object.assign(response.data);\n    })\n  }\n\n addEvent() {\n      this.router.navigate(['/add-event']);\n  \n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Events } from './../model/event';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventService {\n\n  lastId = 0;\n\n  events: Events[] = [];\n\n  constructor(private http: HttpClient) { }\nbaseUrl:String =\"localhost:3000/\";\n  // Add an event\n  addEvent(event: Events) {\n    // TODO: Request to create event\n    return this.http.post(this.baseUrl+\"/add\",event);\n  }\n\n  // Get all events\n  getEvents(): any {\n    // TODO: Request to get all events\n  }\n\n  // Get event by ID\n  getEventById(id: number) {\n    console.log(id);\n    // TODO: Request to get event by ID\n    return this.http.get(this.baseUrl+'/event');\n  }\n\n  updateEvents(e: any) {\n    // TODO: Request to update events\n    return this.http.get(this.baseUrl+'/event');\n  }\n}\n","module.exports = \"\"","module.exports = \"<div>\\n    <br />\\n    <h3>Manage Event</h3>\\n    <form [formGroup]=\\\"eventsForm\\\">\\n      <!-- TODO: Add form here -->\\n   <!-- TODO: Build add form here -->\\n    <div class=\\\"form-group\\\">\\n        <b><label for=\\\"name\\\">Event Name</label></b>\\n        <b><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" value = {event.name} required></b>\\n      </div>\\n \\n      <div class=\\\"form-group\\\">\\n       <b> <label for=\\\"type\\\">Type</label></b>\\n            <select type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"type\\\" value = {event.value}>\\n              <option>Concert</option>\\n              <option>Diwali</option>\\n              <option>Holi</option>\\n              <option>Celebration</option>\\n            </select>\\n       <!--<b> <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"type\\\"></b>-->\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <b><label for=\\\"length\\\">Length (Mins)</label></b>\\n        <b><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"length\\\" value = {event.length}></b>\\n      </div>\\n \\n      <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" style=\\\"color: #fff;\\\">Save</button>\\n    </form>\\n  </div>\\n    \\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { EventService } from './../services/event.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-update-event',\n  templateUrl: './update-event.component.html',\n  styleUrls: ['./update-event.component.css']\n})\nexport class UpdateEventComponent implements OnInit {\n\n  newEvent: any;\n // event: any;\n  id: any;\n  evs: any;\n\n  constructor(private route: ActivatedRoute, private eventService: EventService, private router: Router) { \n    this.route.params.subscribe(params => this.id = params);\n  }\n\n  ngOnInit() {\n   // this.event=this.eventService.getEventById(this.id);\n  }\n\n  eventsForm = new FormGroup({\n    name: new FormControl(),\n    type: new FormControl(),\n    length: new FormControl()\n  });\n\n  updateEvent() {\n   this.eventService.getEventById(this.id).subscribe((response) => {\n      //response.newEvent.views = parseInt(response.newEvent.views) + 1;\n       this.newEvent = this.eventsForm.value;\n      this.eventService.updateEvents(response).subscribe((response) => {\n        console.log(response);\n        this.router.navigate(['/list-events']);\n      })\n    });\n    this.router.navigate(['/list-events']);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}